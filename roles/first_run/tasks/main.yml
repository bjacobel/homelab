---
- name: "Check if connection using pubkey auth is possible for user: {{ ansible_ssh_user }}"
  command: ssh -o User={{ ansible_ssh_user }} -o ConnectTimeout=10
    -o PreferredAuthentications=publickey -o PubkeyAuthentication=yes
    -o StrictHostKeyChecking=no {{ ansible_ssh_host }}
    -p {{ ansible_ssh_port | default(22, True) }} echo "Worked"
  register: correct_key_auth
  connection: local
  ignore_errors: true
  changed_when: false

- name: Backup desired ansible_ssh_user in facts
  ansible.builtin.set_fact:
    desired_new_user: "{{ ansible_ssh_user }}"

- name: Run first-time setup using machine's default user
  include_tasks: as_default_user.yml
  when: correct_key_auth.failed

- name: "Run second-time setup using desired user: {{ ansible_ssh_user }}"
  include_tasks: as_desired_user.yml
  when: not correct_key_auth.failed

- name: Fix Python interpreter bug caused by skipping gather_facts
  ansible.builtin.set_fact:
    ansible_python_interpreter: /usr/bin/python3

- name: Run gather_facts late
  ansible.builtin.setup:

- name: "From here on out, log in using user: {{ desired_new_user }}"
  ansible.builtin.set_fact:
    ansible_ssh_user: "{{ desired_new_user }}"
  notify:
    - Logout

- name: Flush handlers
  ansible.builtin.meta: flush_handlers

- name: Verify that first-run or second-run SSH setup was sucessful
  command: ssh -o User={{ ansible_ssh_user }} -o ConnectTimeout=10
    -o PreferredAuthentications=publickey -o PubkeyAuthentication=yes
    -o StrictHostKeyChecking=no {{ ansible_ssh_host }}
    -p {{ ansible_ssh_port | default(22, True) }} echo "Worked"
  connection: local
  changed_when: false
