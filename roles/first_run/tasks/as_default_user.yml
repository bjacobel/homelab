---
- name: If no connection, change user_name
  ansible.builtin.set_fact:
    ansible_ssh_user: "{{ ansible_user_first_run }}"

- name: Additionally, set password, if it is defined
  ansible.builtin.set_fact:
    ansible_ssh_pass: "{{ ansible_pass_first_run }}"
  when: ansible_pass_first_run is not undefined

- name: "Create new sudo user: {{ ansible_ssh_user }}"
  become: true
  ansible.builtin.user:
    name: "{{ desired_new_user }}"
    password: "{{ ansible_become_pass | string | password_hash('sha256', 'salt', rounds=1000) }}"
    append: true
    shell: /bin/bash
    groups:
      - sudo

- name: Edit sshd_config to enable pubkey auth
  become: true
  ansible.builtin.lineinfile:
    path: /etc/ssh/sshd_config
    regex: ^(# *)?PubkeyAuthentication
    line: PubkeyAuthentication yes
  notify:
    - Restart ssh service
    - Logout

- name: Enumerate control node ssh keys
  delegate_to: localhost
  stat:
    path: ~/.ssh/id_{{ item }}
  register: key_stats
  loop:
    - ed25519
    - ecdsa
    - dsa
    - rsa

- name: Determine if any ssh keys exist
  ansible.builtin.set_fact:
    has_ssh_key: "{{ key_stats.results | selectattr('stat.exists', 'equalto', true) | length > 0 }}"

- name: Choose best ssh key
  ansible.builtin.set_fact:
    control_node_sshkey: "{{ key_stats.results | selectattr('stat.exists', 'equalto', true) | map(attribute='stat') | map(attribute='path') | first }}"
  when: has_ssh_key

- name: Create an ed25519 ssh key on the control node
  delegate_to: localhost
  community.crypto.openssh_keypair:
    path: ~/.ssh/id_ed25519
    regenerate: never
    type: ed25519
    mode: "600"
  when: not has_ssh_key
  register: created_ssh_key

- name: Set ssh key to the one we just created
  ansible.builtin.set_fact:
    control_node_sshkey: "{{ created_ssh_key.filename }}"
  when: not has_ssh_key

- name: Add the control node's ssh key to authorized_keys for {{ desired_new_user }}
  become: true
  become_user: "{{ desired_new_user }}"
  ansible.posix.authorized_key:
    user: "{{ desired_new_user }}"
    key: "{{ lookup('file', control_node_sshkey + '.pub') }}"
    state: present
  notify:
    - Restart ssh service
    - Logout

- name: Use this ssh key for future auth
  ansible.builtin.set_fact:
    ansible_ssh_private_key_file: "{{ control_node_sshkey }}"
  notify:
    - Logout
